<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.Tab_oldnumberMapper" >
  <resultMap id="BaseResultMap" type="Tab_oldnumber" >
    <id column="oldnumber" property="oldnumber" jdbcType="INTEGER" />
    <result column="describle" property="describle" jdbcType="VARCHAR" />
    <result column="prefix" property="prefix" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oldnumber, describle, prefix, number, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="Tab_oldnumberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tab_oldnumber
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_oldnumber
    where oldnumber = #{oldnumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_oldnumber
    where oldnumber = #{oldnumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="Tab_oldnumberExample" >
    delete from tab_oldnumber
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="Tab_oldnumber" >
    insert into tab_oldnumber (oldnumber, describle, prefix, 
      number, remark)
    values (#{oldnumber,jdbcType=INTEGER}, #{describle,jdbcType=VARCHAR}, #{prefix,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Tab_oldnumber" >
    insert into tab_oldnumber
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oldnumber != null" >
        oldnumber,
      </if>
      <if test="describle != null" >
        describle,
      </if>
      <if test="prefix != null" >
        prefix,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oldnumber != null" >
        #{oldnumber,jdbcType=INTEGER},
      </if>
      <if test="describle != null" >
        #{describle,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null" >
        #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="Tab_oldnumberExample" resultType="java.lang.Integer" >
    select count(*) from tab_oldnumber
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tab_oldnumber
    <set >
      <if test="record.oldnumber != null" >
        oldnumber = #{record.oldnumber,jdbcType=INTEGER},
      </if>
      <if test="record.describle != null" >
        describle = #{record.describle,jdbcType=VARCHAR},
      </if>
      <if test="record.prefix != null" >
        prefix = #{record.prefix,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tab_oldnumber
    set oldnumber = #{record.oldnumber,jdbcType=INTEGER},
      describle = #{record.describle,jdbcType=VARCHAR},
      prefix = #{record.prefix,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Tab_oldnumber" >
    update tab_oldnumber
    <set >
      <if test="describle != null" >
        describle = #{describle,jdbcType=VARCHAR},
      </if>
      <if test="prefix != null" >
        prefix = #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where oldnumber = #{oldnumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Tab_oldnumber" >
    update tab_oldnumber
    set describle = #{describle,jdbcType=VARCHAR},
      prefix = #{prefix,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where oldnumber = #{oldnumber,jdbcType=INTEGER}
  </update>
</mapper>