<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.Tab_admissionMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Tab_admission;" >
    <id column="admissionid" property="admissionid" jdbcType="INTEGER" />
    <result column="orderno" property="orderno" jdbcType="VARCHAR" />
    <result column="admissionmoney" property="admissionmoney" jdbcType="Double" />
    <result column="duenum" property="duenum" jdbcType="INTEGER" />
    <result column="duedate" property="duedate" jdbcType="VARCHAR" />
    <result column="duepeople" property="duepeople" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    admissionid, orderno, admissionmoney, duenum, duedate, duepeople
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.Tab_admission;Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tab_admission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_admission
    where admissionid = #{admissionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_admission
    where admissionid = #{admissionid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.Tab_admission;Example" >
    delete from tab_admission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Tab_admission;" >
    insert into tab_admission (admissionid, orderno, admissionmoney, 
      duenum, duedate, duepeople
      )
    values (#{admissionid,jdbcType=INTEGER}, #{orderno,jdbcType=VARCHAR}, #{admissionmoney,jdbcType=Double},
      #{duenum,jdbcType=INTEGER}, #{duedate,jdbcType=VARCHAR}, #{duepeople,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Tab_admission;" >
    insert into tab_admission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="admissionid != null" >
        admissionid,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
      <if test="admissionmoney != null" >
        admissionmoney,
      </if>
      <if test="duenum != null" >
        duenum,
      </if>
      <if test="duedate != null" >
        duedate,
      </if>
      <if test="duepeople != null" >
        duepeople,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="admissionid != null" >
        #{admissionid,jdbcType=INTEGER},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="admissionmoney != null" >
        #{admissionmoney,jdbcType=Double},
      </if>
      <if test="duenum != null" >
        #{duenum,jdbcType=INTEGER},
      </if>
      <if test="duedate != null" >
        #{duedate,jdbcType=VARCHAR},
      </if>
      <if test="duepeople != null" >
        #{duepeople,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.Tab_admission;Example" resultType="java.lang.Integer" >
    select count(*) from tab_admission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tab_admission
    <set >
      <if test="record.admissionid != null" >
        admissionid = #{record.admissionid,jdbcType=INTEGER},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.admissionmoney != null" >
        admissionmoney = #{record.admissionmoney,jdbcType=Double},
      </if>
      <if test="record.duenum != null" >
        duenum = #{record.duenum,jdbcType=INTEGER},
      </if>
      <if test="record.duedate != null" >
        duedate = #{record.duedate,jdbcType=VARCHAR},
      </if>
      <if test="record.duepeople != null" >
        duepeople = #{record.duepeople,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tab_admission
    set admissionid = #{record.admissionid,jdbcType=INTEGER},
      orderno = #{record.orderno,jdbcType=VARCHAR},
      admissionmoney = #{record.admissionmoney,jdbcType=Double},
      duenum = #{record.duenum,jdbcType=INTEGER},
      duedate = #{record.duedate,jdbcType=VARCHAR},
      duepeople = #{record.duepeople,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Tab_admission;" >
    update tab_admission
    <set >
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="admissionmoney != null" >
        admissionmoney = #{admissionmoney,jdbcType=Double},
      </if>
      <if test="duenum != null" >
        duenum = #{duenum,jdbcType=INTEGER},
      </if>
      <if test="duedate != null" >
        duedate = #{duedate,jdbcType=VARCHAR},
      </if>
      <if test="duepeople != null" >
        duepeople = #{duepeople,jdbcType=VARCHAR},
      </if>
    </set>
    where admissionid = #{admissionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Tab_admission;" >
    update tab_admission
    set orderno = #{orderno,jdbcType=VARCHAR},
      admissionmoney = #{admissionmoney,jdbcType=Double},
      duenum = #{duenum,jdbcType=INTEGER},
      duedate = #{duedate,jdbcType=VARCHAR},
      duepeople = #{duepeople,jdbcType=VARCHAR}
    where admissionid = #{admissionid,jdbcType=INTEGER}
  </update>
</mapper>