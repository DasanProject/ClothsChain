<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.Tab_productplanMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Tab_productplan" >
    <id column="productplanid" property="productplanid" jdbcType="INTEGER" />
    <result column="planthing" property="planthing" jdbcType="VARCHAR" />
    <result column="plandate" property="plandate" jdbcType="VARCHAR" />
    <result column="complatedate" property="complatedate" jdbcType="VARCHAR" />
    <result column="progroup" property="progroup" jdbcType="VARCHAR" />
    <result column="chargepaople" property="chargepaople" jdbcType="VARCHAR" />
    <result column="orderno" property="orderno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    productplanid, planthing, plandate, complatedate, progroup, chargepaople, orderno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.Tab_productplanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tab_productplan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_productplan
    where productplanid = #{productplanid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_productplan
    where productplanid = #{productplanid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.Tab_productplanExample" >
    delete from tab_productplan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Tab_productplan" >
    insert into tab_productplan (productplanid, planthing, plandate, 
      complatedate, progroup, chargepaople, 
      orderno)
    values (#{productplanid,jdbcType=INTEGER}, #{planthing,jdbcType=VARCHAR}, #{plandate,jdbcType=VARCHAR}, 
      #{complatedate,jdbcType=VARCHAR}, #{progroup,jdbcType=VARCHAR}, #{chargepaople,jdbcType=VARCHAR}, 
      #{orderno,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Tab_productplan" >
    insert into tab_productplan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productplanid != null" >
        productplanid,
      </if>
      <if test="planthing != null" >
        planthing,
      </if>
      <if test="plandate != null" >
        plandate,
      </if>
      <if test="complatedate != null" >
        complatedate,
      </if>
      <if test="progroup != null" >
        progroup,
      </if>
      <if test="chargepaople != null" >
        chargepaople,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productplanid != null" >
        #{productplanid,jdbcType=INTEGER},
      </if>
      <if test="planthing != null" >
        #{planthing,jdbcType=VARCHAR},
      </if>
      <if test="plandate != null" >
        #{plandate,jdbcType=VARCHAR},
      </if>
      <if test="complatedate != null" >
        #{complatedate,jdbcType=VARCHAR},
      </if>
      <if test="progroup != null" >
        #{progroup,jdbcType=VARCHAR},
      </if>
      <if test="chargepaople != null" >
        #{chargepaople,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.Tab_productplanExample" resultType="java.lang.Integer" >
    select count(*) from tab_productplan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tab_productplan
    <set >
      <if test="record.productplanid != null" >
        productplanid = #{record.productplanid,jdbcType=INTEGER},
      </if>
      <if test="record.planthing != null" >
        planthing = #{record.planthing,jdbcType=VARCHAR},
      </if>
      <if test="record.plandate != null" >
        plandate = #{record.plandate,jdbcType=VARCHAR},
      </if>
      <if test="record.complatedate != null" >
        complatedate = #{record.complatedate,jdbcType=VARCHAR},
      </if>
      <if test="record.progroup != null" >
        progroup = #{record.progroup,jdbcType=VARCHAR},
      </if>
      <if test="record.chargepaople != null" >
        chargepaople = #{record.chargepaople,jdbcType=VARCHAR},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tab_productplan
    set productplanid = #{record.productplanid,jdbcType=INTEGER},
      planthing = #{record.planthing,jdbcType=VARCHAR},
      plandate = #{record.plandate,jdbcType=VARCHAR},
      complatedate = #{record.complatedate,jdbcType=VARCHAR},
      progroup = #{record.progroup,jdbcType=VARCHAR},
      chargepaople = #{record.chargepaople,jdbcType=VARCHAR},
      orderno = #{record.orderno,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Tab_productplan" >
    update tab_productplan
    <set >
      <if test="planthing != null" >
        planthing = #{planthing,jdbcType=VARCHAR},
      </if>
      <if test="plandate != null" >
        plandate = #{plandate,jdbcType=VARCHAR},
      </if>
      <if test="complatedate != null" >
        complatedate = #{complatedate,jdbcType=VARCHAR},
      </if>
      <if test="progroup != null" >
        progroup = #{progroup,jdbcType=VARCHAR},
      </if>
      <if test="chargepaople != null" >
        chargepaople = #{chargepaople,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=VARCHAR},
      </if>
    </set>
    where productplanid = #{productplanid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Tab_productplan" >
    update tab_productplan
    set planthing = #{planthing,jdbcType=VARCHAR},
      plandate = #{plandate,jdbcType=VARCHAR},
      complatedate = #{complatedate,jdbcType=VARCHAR},
      progroup = #{progroup,jdbcType=VARCHAR},
      chargepaople = #{chargepaople,jdbcType=VARCHAR},
      orderno = #{orderno,jdbcType=VARCHAR}
    where productplanid = #{productplanid,jdbcType=INTEGER}
  </update>
</mapper>