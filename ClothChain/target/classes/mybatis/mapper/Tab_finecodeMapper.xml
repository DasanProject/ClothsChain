<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.Tab_finecodeMapper" >
  <resultMap id="BaseResultMap" type="Tab_finecode" >
    <id column="fincodeid" property="fincodeid" jdbcType="INTEGER" />
    <result column="sampleno" property="sampleno" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="deliverydate" property="deliverydate" jdbcType="VARCHAR" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="po" property="po" jdbcType="VARCHAR" />
    <result column="cutnum" property="cutnum" jdbcType="INTEGER" />
    <result column="makenum" property="makenum" jdbcType="INTEGER" />
    <result column="shippednum" property="shippednum" jdbcType="INTEGER" />
    <result column="unshippednum" property="unshippednum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    fincodeid, sampleno, color, size, num, deliverydate, destination, po, cutnum, makenum, 
    shippednum, unshippednum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="Tab_finecodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tab_finecode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_finecode
    where fincodeid = #{fincodeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_finecode
    where fincodeid = #{fincodeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="Tab_finecodeExample" >
    delete from tab_finecode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="Tab_finecode" >
    insert into tab_finecode (fincodeid, sampleno, color, 
      size, num, deliverydate, 
      destination, po, cutnum, 
      makenum, shippednum, unshippednum
      )
    values (#{fincodeid,jdbcType=INTEGER}, #{sampleno,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{deliverydate,jdbcType=VARCHAR}, 
      #{destination,jdbcType=VARCHAR}, #{po,jdbcType=VARCHAR}, #{cutnum,jdbcType=INTEGER}, 
      #{makenum,jdbcType=INTEGER}, #{shippednum,jdbcType=INTEGER}, #{unshippednum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="Tab_finecode" >
    insert into tab_finecode
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fincodeid != null" >
        fincodeid,
      </if>
      <if test="sampleno != null" >
        sampleno,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="deliverydate != null" >
        deliverydate,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="po != null" >
        po,
      </if>
      <if test="cutnum != null" >
        cutnum,
      </if>
      <if test="makenum != null" >
        makenum,
      </if>
      <if test="shippednum != null" >
        shippednum,
      </if>
      <if test="unshippednum != null" >
        unshippednum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fincodeid != null" >
        #{fincodeid,jdbcType=INTEGER},
      </if>
      <if test="sampleno != null" >
        #{sampleno,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="deliverydate != null" >
        #{deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="po != null" >
        #{po,jdbcType=VARCHAR},
      </if>
      <if test="cutnum != null" >
        #{cutnum,jdbcType=INTEGER},
      </if>
      <if test="makenum != null" >
        #{makenum,jdbcType=INTEGER},
      </if>
      <if test="shippednum != null" >
        #{shippednum,jdbcType=INTEGER},
      </if>
      <if test="unshippednum != null" >
        #{unshippednum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="Tab_finecodeExample" resultType="java.lang.Integer" >
    select count(*) from tab_finecode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tab_finecode
    <set >
      <if test="record.fincodeid != null" >
        fincodeid = #{record.fincodeid,jdbcType=INTEGER},
      </if>
      <if test="record.sampleno != null" >
        sampleno = #{record.sampleno,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.deliverydate != null" >
        deliverydate = #{record.deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.po != null" >
        po = #{record.po,jdbcType=VARCHAR},
      </if>
      <if test="record.cutnum != null" >
        cutnum = #{record.cutnum,jdbcType=INTEGER},
      </if>
      <if test="record.makenum != null" >
        makenum = #{record.makenum,jdbcType=INTEGER},
      </if>
      <if test="record.shippednum != null" >
        shippednum = #{record.shippednum,jdbcType=INTEGER},
      </if>
      <if test="record.unshippednum != null" >
        unshippednum = #{record.unshippednum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tab_finecode
    set fincodeid = #{record.fincodeid,jdbcType=INTEGER},
      sampleno = #{record.sampleno,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      deliverydate = #{record.deliverydate,jdbcType=VARCHAR},
      destination = #{record.destination,jdbcType=VARCHAR},
      po = #{record.po,jdbcType=VARCHAR},
      cutnum = #{record.cutnum,jdbcType=INTEGER},
      makenum = #{record.makenum,jdbcType=INTEGER},
      shippednum = #{record.shippednum,jdbcType=INTEGER},
      unshippednum = #{record.unshippednum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Tab_finecode" >
    update tab_finecode
    <set >
      <if test="sampleno != null" >
        sampleno = #{sampleno,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="deliverydate != null" >
        deliverydate = #{deliverydate,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="po != null" >
        po = #{po,jdbcType=VARCHAR},
      </if>
      <if test="cutnum != null" >
        cutnum = #{cutnum,jdbcType=INTEGER},
      </if>
      <if test="makenum != null" >
        makenum = #{makenum,jdbcType=INTEGER},
      </if>
      <if test="shippednum != null" >
        shippednum = #{shippednum,jdbcType=INTEGER},
      </if>
      <if test="unshippednum != null" >
        unshippednum = #{unshippednum,jdbcType=INTEGER},
      </if>
    </set>
    where fincodeid = #{fincodeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Tab_finecode" >
    update tab_finecode
    set sampleno = #{sampleno,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      deliverydate = #{deliverydate,jdbcType=VARCHAR},
      destination = #{destination,jdbcType=VARCHAR},
      po = #{po,jdbcType=VARCHAR},
      cutnum = #{cutnum,jdbcType=INTEGER},
      makenum = #{makenum,jdbcType=INTEGER},
      shippednum = #{shippednum,jdbcType=INTEGER},
      unshippednum = #{unshippednum,jdbcType=INTEGER}
    where fincodeid = #{fincodeid,jdbcType=INTEGER}
  </update>
</mapper>