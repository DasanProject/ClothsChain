<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.Tab_shipnoMapper" >
  <resultMap id="BaseResultMap" type="Tab_shipno" >
    <id column="spid" property="spid" jdbcType="INTEGER" />
    <result column="customerid" property="customerid" jdbcType="INTEGER" />
    <result column="noticno" property="noticno" jdbcType="VARCHAR" />
    <result column="expecteddate" property="expecteddate" jdbcType="VARCHAR" />
    <result column="outgodate" property="outgodate" jdbcType="VARCHAR" />
    <result column="managers" property="managers" jdbcType="VARCHAR" />
    <result column="relation" property="relation" jdbcType="VARCHAR" />
    <result column="deli" property="deli" jdbcType="VARCHAR" />
    <result column="orderno" property="orderno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    spid, customerid, noticno, expecteddate, outgodate, managers, relation, deli, orderno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="Tab_shipnoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tab_shipno
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_shipno
    where spid = #{spid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_shipno
    where spid = #{spid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="Tab_shipnoExample" >
    delete from tab_shipno
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="Tab_shipno" >
    insert into tab_shipno (spid, customerid, noticno, 
      expecteddate, outgodate, managers, 
      relation, deli, orderno
      )
    values (#{spid,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, #{noticno,jdbcType=VARCHAR}, 
      #{expecteddate,jdbcType=VARCHAR}, #{outgodate,jdbcType=VARCHAR}, #{managers,jdbcType=VARCHAR}, 
      #{relation,jdbcType=VARCHAR}, #{deli,jdbcType=VARCHAR}, #{orderno,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="Tab_shipno" >
    insert into tab_shipno
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="spid != null" >
        spid,
      </if>
      <if test="customerid != null" >
        customerid,
      </if>
      <if test="noticno != null" >
        noticno,
      </if>
      <if test="expecteddate != null" >
        expecteddate,
      </if>
      <if test="outgodate != null" >
        outgodate,
      </if>
      <if test="managers != null" >
        managers,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="deli != null" >
        deli,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="spid != null" >
        #{spid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="noticno != null" >
        #{noticno,jdbcType=VARCHAR},
      </if>
      <if test="expecteddate != null" >
        #{expecteddate,jdbcType=VARCHAR},
      </if>
      <if test="outgodate != null" >
        #{outgodate,jdbcType=VARCHAR},
      </if>
      <if test="managers != null" >
        #{managers,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="deli != null" >
        #{deli,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="Tab_shipnoExample" resultType="java.lang.Integer" >
    select count(*) from tab_shipno
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tab_shipno
    <set >
      <if test="record.spid != null" >
        spid = #{record.spid,jdbcType=INTEGER},
      </if>
      <if test="record.customerid != null" >
        customerid = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.noticno != null" >
        noticno = #{record.noticno,jdbcType=VARCHAR},
      </if>
      <if test="record.expecteddate != null" >
        expecteddate = #{record.expecteddate,jdbcType=VARCHAR},
      </if>
      <if test="record.outgodate != null" >
        outgodate = #{record.outgodate,jdbcType=VARCHAR},
      </if>
      <if test="record.managers != null" >
        managers = #{record.managers,jdbcType=VARCHAR},
      </if>
      <if test="record.relation != null" >
        relation = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.deli != null" >
        deli = #{record.deli,jdbcType=VARCHAR},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tab_shipno
    set spid = #{record.spid,jdbcType=INTEGER},
      customerid = #{record.customerid,jdbcType=INTEGER},
      noticno = #{record.noticno,jdbcType=VARCHAR},
      expecteddate = #{record.expecteddate,jdbcType=VARCHAR},
      outgodate = #{record.outgodate,jdbcType=VARCHAR},
      managers = #{record.managers,jdbcType=VARCHAR},
      relation = #{record.relation,jdbcType=VARCHAR},
      deli = #{record.deli,jdbcType=VARCHAR},
      orderno = #{record.orderno,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Tab_shipno" >
    update tab_shipno
    <set >
      <if test="customerid != null" >
        customerid = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="noticno != null" >
        noticno = #{noticno,jdbcType=VARCHAR},
      </if>
      <if test="expecteddate != null" >
        expecteddate = #{expecteddate,jdbcType=VARCHAR},
      </if>
      <if test="outgodate != null" >
        outgodate = #{outgodate,jdbcType=VARCHAR},
      </if>
      <if test="managers != null" >
        managers = #{managers,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="deli != null" >
        deli = #{deli,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=VARCHAR},
      </if>
    </set>
    where spid = #{spid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Tab_shipno" >
    update tab_shipno
    set customerid = #{customerid,jdbcType=INTEGER},
      noticno = #{noticno,jdbcType=VARCHAR},
      expecteddate = #{expecteddate,jdbcType=VARCHAR},
      outgodate = #{outgodate,jdbcType=VARCHAR},
      managers = #{managers,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      deli = #{deli,jdbcType=VARCHAR},
      orderno = #{orderno,jdbcType=VARCHAR}
    where spid = #{spid,jdbcType=INTEGER}
  </update>
</mapper>